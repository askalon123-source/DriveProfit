import os
import zipfile
import datetime

def create_project_zip():
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ ZIP-–∞—Ä—Ö–∏–≤–∞ –¥–ª—è GitHub...")
    
    # –ò—Å–∫–ª—é—á–∞–µ–º—ã–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã
    exclude_dirs = {'venv', '__pycache__', '.git'}
    exclude_files = {'.gitignore'}  # –ú—ã –¥–æ–±–∞–≤–∏–º –µ–≥–æ –≤—Ä—É—á–Ω—É—é
    
    # –ò–º—è –∞—Ä—Ö–∏–≤–∞ —Å –¥–∞—Ç–æ–π
    date_str = datetime.datetime.now().strftime("%Y-%m-%d")
    zip_name = f"drivee-case-{date_str}.zip"
    
    with zipfile.ZipFile(zip_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏
        for root, dirs, files in os.walk('.'):
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏
            dirs[:] = [d for d in dirs if d not in exclude_dirs]
            
            for file in files:
                if file in exclude_files:
                    continue
                    
                file_path = os.path.join(root, file)
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∞–º –∞—Ä—Ö–∏–≤ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
                if file.endswith('.zip') or file.startswith('.'):
                    continue
                
                # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∞—Ä—Ö–∏–≤–∞
                arcname = os.path.relpath(file_path, '.')
                zipf.write(file_path, arcname)
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {arcname}")
    
    file_size = os.path.getsize(zip_name) / 1024 / 1024
    print(f"\nüéâ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: {zip_name}")
    print(f"üíæ –†–∞–∑–º–µ—Ä: {file_size:.2f} MB")
    
    return zip_name

if __name__ == "__main__":
    create_project_zip()