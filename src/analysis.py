import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import os

print("üöó –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö Drivee...")

# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(current_dir)
data_dir = os.path.join(project_root, 'data')
output_dir = os.path.join(project_root, 'output')

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
os.makedirs(data_dir, exist_ok=True)
os.makedirs(output_dir, exist_ok=True)

print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
print(f"üìÅ –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: {project_root}")
print(f"üìÅ –ü–∞–ø–∫–∞ data: {data_dir}")
print(f"üìÅ –ü–∞–ø–∫–∞ output: {output_dir}")

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
np.random.seed(42)
n_samples = 1000

print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
data = pd.DataFrame({
    'price_start_local': np.random.randint(200, 500, n_samples),
    'price_bid_local': np.random.randint(250, 600, n_samples),
    'driver_rating': np.random.uniform(3.5, 5.0, n_samples),
    'distance_km': np.random.uniform(1, 20, n_samples),
    'is_done': np.random.choice([0, 1], n_samples, p=[0.3, 0.7])
})

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
data_path = os.path.join(data_dir, 'train.csv')
data.to_csv(data_path, index=False)
print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {data_path}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
if os.path.exists(data_path):
    file_size = os.path.getsize(data_path)
    print(f"‚úÖ –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω, —Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
else:
    print("‚ùå –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –ù–ï —Å–æ–∑–¥–∞–Ω!")

# –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
print("üé® –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤...")

# –ì—Ä–∞—Ñ–∏–∫ 1: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω
plt.figure(figsize=(12, 8))

plt.subplot(2, 2, 1)
plt.hist(data['price_start_local'], alpha=0.7, label='–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞', bins=20, color='blue')
plt.hist(data['price_bid_local'], alpha=0.7, label='–¶–µ–Ω–∞ –±–∏–¥–∞', bins=20, color='orange')
plt.legend()
plt.title('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω')
plt.xlabel('–¶–µ–Ω–∞ (‚ÇΩ)')
plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ')

# –ì—Ä–∞—Ñ–∏–∫ 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è
plt.subplot(2, 2, 2)
acceptance_rate = data['is_done'].mean()
labels = [f'–ü—Ä–∏–Ω—è—Ç–æ\n{acceptance_rate:.1%}', f'–û—Ç–∫–ª–æ–Ω–µ–Ω–æ\n{1-acceptance_rate:.1%}']
sizes = [acceptance_rate, 1 - acceptance_rate]
colors = ['#4CAF50', '#F44336']
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
plt.title('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–æ–≤')

# –ì—Ä–∞—Ñ–∏–∫ 3: –ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
plt.subplot(2, 2, 3)
accepted = data[data['is_done'] == 1]
rejected = data[data['is_done'] == 0]
plt.hist(accepted['driver_rating'], alpha=0.7, label='–ü—Ä–∏–Ω—è—Ç—ã–µ', bins=15, color='green', density=True)
plt.hist(rejected['driver_rating'], alpha=0.7, label='–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ', bins=15, color='red', density=True)
plt.xlabel('–†–µ–π—Ç–∏–Ω–≥ –≤–æ–¥–∏—Ç–µ–ª—è')
plt.ylabel('–ü–ª–æ—Ç–Ω–æ—Å—Ç—å')
plt.title('–ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É')
plt.legend()

# –ì—Ä–∞—Ñ–∏–∫ 4: –ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
plt.subplot(2, 2, 4)
plt.scatter(accepted['distance_km'], accepted['price_bid_local'], alpha=0.5, label='–ü—Ä–∏–Ω—è—Ç—ã–µ', color='green')
plt.scatter(rejected['distance_km'], rejected['price_bid_local'], alpha=0.5, label='–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ', color='red')
plt.xlabel('–î–∏—Å—Ç–∞–Ω—Ü–∏—è (–∫–º)')
plt.ylabel('–¶–µ–Ω–∞ –±–∏–¥–∞ (‚ÇΩ)')
plt.title('–ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –∏ —Ü–µ–Ω–µ')
plt.legend()

plt.tight_layout()

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –î–û –ø–æ–∫–∞–∑–∞
output_path = os.path.join(output_dir, 'analysis_results.png')
print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –≤: {output_path}")
plt.savefig(output_path, dpi=150, bbox_inches='tight')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
if os.path.exists(output_path):
    file_size = os.path.getsize(output_path)
    print(f"‚úÖ –ì—Ä–∞—Ñ–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω, —Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
else:
    print("‚ùå –ì—Ä–∞—Ñ–∏–∫ –ù–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
print("üñºÔ∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫...")
plt.show()

print("üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
print(f"üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(data)} –∑–∞–∫–∞–∑–æ–≤")
print(f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ: {data['is_done'].sum()} ({data['is_done'].mean():.1%})")